include::global_attr.adoc[]
= Configuring {CMK}
:revdate: 2016-04-21
:title: WATO - The {CMK} configuration interface
:description: {CMK} enables the entire basic configuration to be viewed directly in the web interface. This article offers a first introduction to this important module.

{related-start}
link:cmk_commandline.html[{CMK} on the command line]
link:wato_hosts.html[Host Administration]
link:wato_rules.html[Host and service parameters]
{related-end}


== Introduction

[{image-left}]
image::watosnapin.png[width=210]

{CMK} differentiates between the *configuration environment* in which you manage the hosts, services and settings, and the actual *monitoring* in which the operational monitoring takes place.

Changes in the configuration -- adding a new host, for example -- will initially have
no effect on the monitoring.
Changes must first be enabled by an [.guihint]#Activate Changes# command, which will bring all changes that you have accumulated since the last activation command as a ‘bundle’ into the active production.
This might seem a little cumbersome,
but it does have the advantage that more complex changes can be prepared
without haste in advance before being put into production.  For example, after adding a
new host you might want to define thresholds or remove some services before
‘arming’ the new component.

The tool for configuring {CMK} via GUI is called the [.guihint]#WATO#
([.guihint]#Web Administration Tool#). WATO maintains all configurations in a conventional
text data format which experienced users can edit manually, or even create with
scripts. WATO can be accessed via the corresponding element in the sidebar.
This element is included as standard and offers direct access to all WATO
modules.

Whenever you make a change to the monitoring configuration using WATO, this
change will at first be picked up and held as [.guihint]#pending#. Such changes can
be identified by the icon:button_2_changes[] button in the WATO modules,
and respectively the icon:wato_changes[] button in the sidebar.  Both of
these buttons open a list of the changes:

[{image-border}]
image::wato_pending_log.png[]

With the [.guihint]#Activate Changes# button the configuration data from WATO will
be used to generate a new configuration for the monitoring core, and instruct
the core to immediately begin using the new configuration:

image::wato_activate_changes.png[width=400]

The list of pending changes is subsequently cleared. These entries are not
lost however -- they can subsequently be called up with the [.guihint]#Audit Log# button. Here you
can find a log file of all changes that have been made using WATO.


// H1:Snapshots
//
// In version {v128} or earlier, whenever you activate changes
// WATO automatically creates a backup of the configuration. The list of these
// backups is accessed via the icon:icon_backup[] [.guihint]#Backup & Restore# WATO module:
//
// BI:wato_snapshots.png
//
// A click on icon:icon_edit[] (details of a snaphot), and then a click on
// [.guihint]#Restore Snapshot# copies this back into the configuration. 
// *Important note*: Only the configuration will be restored -- the monitoring’s state
// and history will not be affected.
//
// *Note: From {CMK} Version {v14}* this feature is no longer available, as it is being completely revised.*]

== Backups

=== Basics

Over time, you will put a lot of work into the exact configuration of your
hosts and services, limits, alerts and so on -- so you should make backups.
 This is not only useful in case something goes wrong, but also for testing
or using different configurations. You can back up the complete configuration
using the WATO module [.guihint]#Backups# and restore it if necessary. Backups can
be scheduled, encrypted and compressed.

=== Configuring encrypted compressed backups

In the first step you create a new backup target via
[.guihint]#WATO > Backups > Backup targets > New backup target#. The absolute path
specification refers to the system, not the instance.

image::backup_target_config.png[]

Then, create a new key for your backups via icon:icon_backup_keys[] with
a meaningful name and a secure password.

image::backup_key_config.png[]

*Attention:* After creating the key you will see a warning message
telling you that you have not downloaded the keys yet. Since you need these
keys to restore backups, the message will remain until all keys have been backed up.

image::backup_key_warning.png[]

Now you can create a new backup job via icon:icon_backup_newjob[] and among other
things you can select the items you just created under [.guihint]#Target# or [.guihint]#Encryption#.
You will also find options for compression and scheduling backups. As you soon will
see, you can also trigger backups manually. With [.guihint]#Do not backup historical data#
you can save metrics (RRD files), monitoring history and log files, which leads to
significantly smaller backup archives.

image::backup_job_config.png[]


=== Creating backups

Back on the start page of the backup module you can now see your finished
backup job and start it via icon:icon_backup_start[]:

[{image-border}]
image::backup_job_play.png[]

You can stop running backups with icon:icon_backup_stop[]:

[{image-border}]
image::backup_job_running.png[]

Finally, you will see the confirmation of the completed backup:

[{image-border}]
image::backup_job_finished.png[]

For both running and completed jobs, use icon:icon_backup_state[] to display a detailed status message.

=== Restoring backups

You can start restoring backups via icon:icon_backup_restore[], the procedure is largely self-explanatory:

. Select the backup job.
. Select the desired backup file.
. Start and authorize the operation with the backup key.

After restoring, the instance is restarted, so you temporarily see a 503 error message:

image::backup_restore_warning.png[]

As soon as the instance is available again you will receive a detailed status message
about the successful backup:

[{image-border}]
image::backup_restore_finished.png[]


== Important WATO modules

WATO includes numerous modules -- one for each important function of {CMK}.
The following modules are particularly important:

[cols=3]
|===
| |Module |Function 

|icon:icon_home[] |[.guihint]#Main Menu# |A list of all WATO modules, each with a short description
|icon:icon_agents[] |[.guihint]#Monitoring Agents# |Here you will find {CMK} agents for Linux, Windows and other operating systems. In the {EE} you can also configure, package and automatically update the agents via WATO.
|icon:icon_folder[] |[.guihint]#Hosts# |Management of the hosts to be monitored -- perhaps the most important module.
|icon:icon_configuration[] |[.guihint]#Global Settings# |Global settings -- those that do not apply to specific hosts, services or users.
|icon:icon_rulesets[] | [.guihint]#Host & Service Parameters# |All settings for specific hosts or services are found here. The configuration procedure is link:wato_rules.html[rule based].
|===



== Quick access

Once you have worked longer with WATO you will have learned its icons off by
heart -- then the smaller version of the WATO menu for the sidebar can be recommended:

image::wato_quickaccess.png[width=42%]
