include::global_attr.adoc[]
= Forecast graphs
:revdate: 2021-04-13
:title: Forecast graphs
:description: Improve your capacity management with the {CMK} forecast graphs. Details on how to configure these can be found in this article.

{related-start}
link:graphing.html[Performance data and graphing]
link:dashboards.html[Dashboards]
link:predictive_monitoring.html[Predictive Monitoring]
{related-end}


==  Introduction

The aim of monitoring with {CMK} is to provide you at all times with a clear picture 
of the actual state of your IT infrastructure. The recording of all this information
in databases allows you to look back into the past at any time, to create performance graphs and to identify correlations that may have led to problems.

And even if, for example, a glance at the graphs of a file system already provides a rough idea of when space might be tight, this quick
impression is often deceptive. It leaves out central elements of capacity
management. Seasonal factors, for example, leave much room for
misjudgements. The demands on your IT infrastructure can change, for instance, during holiday periods, public holidays or even in relation to the seasons, and these factors are not always trivial or obvious.

Another important factor in the calculation of forecasts are one-off effects. For example, if a linear regression for extrapolation is utilised during a large clean-up operation on a file system, the storage space consumed by the process itself could give the impression that your file system will be completely empty in the near future.
The fact that this is a wrong conclusion is immediately obvious and demonstrates strikingly why much more reliable predictions require much more robust methods.

Such robust methods, which, based on the collected historical data enable a clever interpretation and, if configured correctly, good predictions, are provided by {CMK} from version {v16} onwards. In this article we will show you how these can be set up.


[#installation]
== Installation


[#install_compiler]
=== Compiler installation

In order to use the prediction function in {CMK} {v16}, you must first install the link:https://github.com/facebook/prophet[Prophet] tool provided by Facebook  on your {CMK} server. Among other things, a *C compiler* is needed to install Prophet. In the following, we show you how to install the required compilers in the most important Linux distributions:

====  Debian/Ubuntu

[{shell}]
----
{c-root} apt-get install gcc g++
----

====  Red Hat/CentOS

[{shell}]
----
{c-root} yum install gcc gcc-c++
----

==== SUSE Linux Enterprise Server

Under SLES, you must first install the
link:https://documentation.suse.com/sles/15-SP1/html/SLES-all/cha-register-sle.html#sec-register-sle-add-modules['Development Tools Module']
with the help of YaST or SUSEConnect. Only then can you install the compiler using Zypper:

[{shell}]
----
{c-root} zypper install gcc-c++
----

=== Installing Prophet

For the installation of Prophet we provide an installation script in
link:https://github.com/tribe29/checkmk[our repository] on GitHub.
With the following commands, as site user you can download and execute this script. Since at the end of this installation your {CMK} site's Apache will be restarted, you should plan the installation accordingly:

[{shell}]
----
{c-omd} wget https://raw.githubusercontent.com/tribe29/checkmk/1.6.0/bin/install_fbprophet
{c-omd} chmod +x install_fbprophet
{c-omd} ./install_fbprophet
----

*Note:* As of {CMK} {v20} the ability to create forecast graphs will be will be natively integrated, meaning it will no longer be necessary to install additional packages.


==  Configuration in {CMK}

===  Creating a forecast graph

By far the easiest way to create a forecast graph is to go to the detail view of any service that produces metrics. In such a detailed view, you will find the line with the [.guihint]#Service Metrics# directly below the service graphs. Behind the current values of each of these metrics you will find a button for the special action icon:icon_menu[] for metrics.

image::forecast_graphs_service_metrics.png[]

Now open the action menu and select [.guihint]#New forecast graph...#.

image::forecast_graphs_service_metrics_action_menu.png[width=50%]


After a few moments you will already be able to see the first forecast graph for the metric you have chosen.

image::forecast_graphs_first_graph.png[]

===  The model parameters

Now it is time to select the specific parameters for calculating the forecast for this metric -- to be found directly below the graph. As these parameters are very much dependent on your particular environment and the purpose of the forecast, a thorough examination of the options and their possible effects is very important. 

image::forecast_graphs_model_parameters.png[]

====  Minimum - Maximum - Average

The last field in the line [.guihint]#Metric# can already have a considerable influence on how meaningful the prediction will be. The default at this point is always the [.guihint]#Maximum# option, because in the context of capacity management, this option most frequently provides an indication of the very prediction -- bottlenecks at peak loads. For example, if you used look only at average values for the [.guihint]#CPU utilisation# service, you might see that the average utilisation is still acceptable. However, in the foreseeable future, you would only notice in the monitoring that your CPU is constantly reaching its limits during peak loads when the actual situation arises.

====  Consider history of

With this option you can determine which period of the historical data is to be used as the basis for calculating the forecast. In general, it can be said that many data points are needed to enable a good fit. However, if you always want to take the measured values of the previous month as a basis, for example, you can do this by selecting the
[.guihint]#Last month# option. This does not mean from the past 30 days, but rather from the previous calendar month.

Another reason to limit the period could be, for example, an upgrade of individual components on a server. The inclusion of data *before* this upgrade could possibly distort the prediction.

====  Forecast into the future

The forecast starts on the last day of the period selected under [.guihint]#Consider history of#. This is worth mentioning, because depending on the selection a prediction is also calculated for a period in which real measurement data has already been accumulated. Within this overlap, it is therefore already possible to see how close the prediction was to the actual values.

Furthermore, it only remains to say here that the further you try to look into the future, the more imprecise the prediction will naturally become. However, this banality is illustrated very well in the forecast graph by the ever-increasing orange shading.

====  Trend flexibility

When observing and analysing time ranges -- in this case, the values recorded for your services -- so-called structural breaks or changepoints play a very important role. To put it simply, these changepoints are those moments in the time ranges at which more or less large changes can be observed. During the analysis of the time frames {CMK} now identifies a whole series of these changepoints and uses them in order to reuse them in the forecast and thus make it more precise. How strongly {CMK} adjusts the curve of the forecast graph to these changepoints, can be determined via the five [.guihint]#Trend flexibility# options.
If the adjustment is too strong -- a so-called *overfitting* -- the prediction function would  too closely resemble a simple update (basically a copy) of the previous time series. An *underfitting* on the other hand, would make the prediction extremely inaccurate. {CMK} provides a standard value that is good for many situations and we can use this with [.guihint]#Adaptable#. Should your forecast graph be too inaccurate -- underfitting -- you would have to increase the flexibility of the trend curve by selecting [.guihint]#Voluble# or [.guihint]#Very Voluble#. In the opposite case -- i.e. overfitting -- you would still have the two options [.guihint]#Susceptible# and [.guihint]#Linear#, although we do not recommend using [.guihint]#Linear#, because this is only available for the sake of completeness.

====  Model seasonality

At this point you will need to determine how the forecast graph should handle recurring and seasonal demands on your infrastructure.
Two time frames are automatically considered in the forecast graphs --
weekly recurring requirements, such as for a five-day working week and weekends, and annual or seasonal requirements, such as those related to public holidays and staff holidays. {CMK} recognises this
seasonality automatically, so all you have to do is select how you want it to be
forecast.

The [.guihint]#Additive# option includes these changed requirements in the prediction only once. As the name suggests, the increased or decreased demand is simply added to the trend.

With the selection of [.guihint]#Multiplicative#, on the other hand, the future seasonal demand increases or decreases proportionally to the trend.

====  Confidence interval

At this point you will need to determine the confidence level for your prediction.
In simple terms, this is where you specify the probability with which the
values to be expected should lie within the confidence interval resulting from this level. The aim of such a selection is, from the highest possible level, to always obtain an interval that is as narrow as possible. The more historical data that is available, the more successful the forecast graphs can be in achieving this. It is important that this selection does not influence the actual 'fit'. Only the area surrounding it (i.e. the visualisation of the interval)  becomes correspondingly larger at higher levels.

====  Display historic data since the last

In the forecast graph, on the left-hand side you see -- separated by a
vertical yellow line -- the visualisation of a specified number of days of actually excellent data. You can specify how many days should be
displayed here. This value has no effect on the calculation of the
forecast itself, but only influences the display.

====  Display information in graph

And the last option again only influences the display of the graph. If you check [.guihint]#Model parameters#, the previously selected parameters will be displayed below the finished graph.
This makes it easier for the viewer to interpret the graph.


== Diagnostic options

=== Possible errors and error messages

==== Cannot create graph

The error message [.guihint]#Cannot create graph - Metric historical data has less than 2 days of valid values#
is largely self-explanatory. To be able to make meaningful predictions
{CMK} needs more than 2 full days of historical measurement data. With fewer measurement points as a basis, a halfway serious fit is simply not possible.

==== Necessary dependencies for forecast have not been installed

If you get this error message when you try to create a forecast graph, under {CMK} {v16} you should make sure that the required package 
link:forecast_graphs.html#installation[Prophet has been installed on your {CMK} server].

At present, however, this error message may have another reason due to a bug. If your user interface is set to German
you will also receive the above error message. As a workaround you can change the GUI language to English.

==== Problems when installing Prophet

If errors occur during the installation of Prophet (red text during the
installation), please make sure that the
link:forecast_graphs.html#install_compiler[necessary compilers have been installed].

If you want to test Prophet in a virtual machine (VM) for the first time and you encounter difficulties, it could be that the VM does not have sufficient resources. At least 4 GB of RAM (base memory) is required for the installation of Prophet. In addition, the virtual hard disk should be well over 10 GB capacity to provide enough space for the operating system as well as for {CMK} and Prophet.
